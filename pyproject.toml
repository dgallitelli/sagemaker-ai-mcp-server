[project]
name = "sagemaker-ai-mcp-server"
version = "0.0.1"
description = "MCP Server that uses SageMaker AI APIs to monitor and manage resources."
readme = "README.md"
requires-python = ">=3.10"
dependencies = [
    "boto3==1.39.12",
    "loguru==0.7.3",
    "mcp[cli]==1.12.0",
    "pydantic==2.11.7",
]
license = { text = "Apache-2.0" }
license-files = ["LICENSE"]
authors = [
    { name = "Bojan Jakimovski", email = "jakimovski_bojan@outlook.com" },
    { name = "Davide Galiitelli", email = "dggallit@amazon.com" },
]
classifiers = [
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
]


[dependency-groups]
dev = [
    "commitizen>=4.2.2",
    "pre-commit>=4.1.0",
    "ruff>=0.9.7",
    "pytest>=8.0.0",
    "pytest-asyncio>=0.26.0",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.12.0",
    "ty>=0.0.1a15",
]

[project.scripts]
"sagemaker-ai-mcp-server" = "sagemaker_ai_mcp_server.server:main"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.metadata]
allow-direct-references = true

[tool.ruff]
line-length = 99
extend-include = ["*.ipynb"]
exclude = [
    ".venv",
    "**/__pycache__",
    "**/node_modules",
    "**/dist",
    "**/build",
    "**/env",
    "**/.ruff_cache",
    "**/.venv",
    "**/.ipynb_checkpoints",
]
force-exclude = true

[tool.ruff.lint]
exclude = ["__init__.py"]
select = ["C", "D", "E", "F", "I", "W"]
ignore = ["C901", "E501", "E741", "F402", "F823", "D100", "D106"]

[tool.ruff.lint.isort]
lines-after-imports = 2
no-sections = true

[tool.ruff.lint.per-file-ignores]
"**/*.ipynb" = ["F704"]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.format]
quote-style = "single"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"
docstring-code-format = true

[tool.commitizen]
name = "cz_conventional_commits"
version = "0.0.0"
tag_format = "v$version"
version_files = [
    "pyproject.toml:version",
    "sagemaker_ai_mcp_server/__init__.py:__version__",
]
update_changelog_on_bump = true

[tool.hatch.build.targets.wheel]
packages = ["sagemaker_ai_mcp_server"]

[tool.bandit]
exclude_dirs = ["venv", ".venv", "tests"]

[tool.pytest.ini_options]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
testpaths = ["tests"]
asyncio_mode = "auto"
markers = [
    "live: marks tests that make live API calls (deselect with '-m \"not live\"')",
    "asyncio: marks tests that use asyncio",
]

[tool.coverage.report]
exclude_also = ['pragma: no cover', 'if __name__ == .__main__.:\n    main()']

[tool.coverage.run]
source = ["sagemaker_ai_mcp_server"]
